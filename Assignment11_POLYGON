// shapes.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

//#include "pch.h"
#include <iostream>
#include <iostream>
#include <stdlib.h> //Needed for "exit" function

//Include OpenGL header files, so that we can use OpenGL
#ifdef _APPLE_
#include <OpenGL/OpenGL.h>
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

using namespace std;

//Called when a key is pressed
void handleKeypress(unsigned char key, //The key that was pressed
	int x, int y) {    //The current mouse coordinates
	switch (key) {
	case 27: //Escape key
		exit(0); //Exit the program
	}
}

//Initializes 3D rendering
void initRendering() {
	//Makes 3D drawing work when something is in front of something else
	glEnable(GL_DEPTH_TEST);
}

//Called when the window is resized
void handleResize(int w, int h) {
	//Tell OpenGL how to convert from coordinates to pixel values
	glViewport(0, 0, w, h);

	glMatrixMode(GL_PROJECTION); //Switch to setting the camera perspective

								 //Set the camera perspective
	glLoadIdentity(); //Reset the camera
	gluPerspective(45.0,                  //The camera angle
		(double)w / (double)h, //The width-to-height ratio
		1.0,                   //The near z clipping coordinate
		200.0);                //The far z clipping coordinate
}

//Draws the 3D scene
void drawScene() {
	//Clear information from last draw
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	glMatrixMode(GL_MODELVIEW); //Switch to the drawing perspective
	glLoadIdentity(); //Reset the drawing perspective
	glBegin(GL_TRIANGLES); //Begin triangle coordinates

						   //6
	glVertex3f(0.5f, 1.5f, -5.0f);
	glVertex3f(0.7f, 1.9f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	glVertex3f(1.1f, 1.9f, -5.0f);
	glVertex3f(0.7f, 1.9f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	glVertex3f(1.1f, 1.9f, -5.0f);
	glVertex3f(1.3f, 1.5f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	glVertex3f(1.1f, 1.1f, -5.0f);
	glVertex3f(1.3f, 1.5f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	glVertex3f(1.1f, 1.1f, -5.0f);
	glVertex3f(0.7f, 1.1f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	glVertex3f(0.5f, 1.5f, -5.0f);
	glVertex3f(0.7f, 1.1f, -5.0f);
	glVertex3f(0.9f, 1.5f, -5.0f);

	//8
	glVertex3f(0.5f, 0.3f, -5.0f);
	glVertex3f(0.5f, 0.7f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(0.7f, 0.9f, -5.0f);
	glVertex3f(0.5f, 0.7f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(0.7f, 0.9f, -5.0f);
	glVertex3f(1.1f, 0.9f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(1.3f, 0.7f, -5.0f);
	glVertex3f(1.1f, 0.9f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(1.3f, 0.7f, -5.0f);
	glVertex3f(1.3f, 0.3f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(1.1f, 0.1f, -5.0f);
	glVertex3f(1.3f, 0.3f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(1.1f, 0.1f, -5.0f);
	glVertex3f(0.7f, 0.1f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	glVertex3f(0.5f, 0.3f, -5.0f);
	glVertex3f(0.7f, 0.1f, -5.0f);
	glVertex3f(0.9f, 0.5f, -5.0f);

	//5
	glVertex3f(-1.1f, 1.5f, -5.0f);
	glVertex3f(-0.7f, 1.9f, -5.0f);
	glVertex3f(-0.7f, 1.5f, -5.0f);

	glVertex3f(-0.7f, 1.9f, -5.0f);
	glVertex3f(-0.3f, 1.5f, -5.0f);
	glVertex3f(-0.7f, 1.5f, -5.0f);

	glVertex3f(-0.5f, 1.1f, -5.0f);
	glVertex3f(-0.3f, 1.5f, -5.0f);
	glVertex3f(-0.7f, 1.5f, -5.0f);

	glVertex3f(-0.5f, 1.1f, -5.0f);
	glVertex3f(-0.9f, 1.1f, -5.0f);
	glVertex3f(-0.7f, 1.5f, -5.0f);

	glVertex3f(-1.1f, 1.5f, -5.0f);
	glVertex3f(-0.9f, 1.1f, -5.0f);
	glVertex3f(-0.7f, 1.5f, -5.0f);

	//7
	glVertex3f(-0.7f, 0.7f, -5.0f);
	glVertex3f(-0.9f, 0.5f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-1.0f, 0.3f, -5.0f);
	glVertex3f(-0.9f, 0.5f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-0.7f, 0.7f, -5.0f);
	glVertex3f(-0.5f, 0.5f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-0.4f, 0.3f, -5.0f);
	glVertex3f(-0.5f, 0.5f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-0.4f, 0.3f, -5.0f);
	glVertex3f(-0.5f, 0.1f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-0.9f, 0.1f, -5.0f);
	glVertex3f(-0.5f, 0.1f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	glVertex3f(-0.9f, 0.1f, -5.0f);
	glVertex3f(-1.0f, 0.3f, -5.0f);
	glVertex3f(-0.7f, 0.3f, -5.0f);

	//9
	glVertex3f(-1.0f, -0.5f, -5.0f);
	glVertex3f(-0.9f, -0.3f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.7f, -0.1f, -5.0f);
	glVertex3f(-0.9f, -0.3f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.7f, -0.1f, -5.0f);
	glVertex3f(-0.5f, -0.3f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-0.5f, -0.3f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.4f, -0.5f, -5.0f);
	glVertex3f(-0.4f, -0.7f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.5f, -0.9f, -5.0f);
	glVertex3f(-0.4f, -0.7f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-0.5f, -0.9f, -5.0f);
	glVertex3f(-0.9f, -0.9f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-1.0f, -0.7f, -5.0f);
	glVertex3f(-0.9f, -0.9f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);

	glVertex3f(-1.0f, -0.7f, -5.0f);
	glVertex3f(-1.0f, -0.5f, -5.0f);
	glVertex3f(-0.7f, -0.5f, -5.0f);


	//10
	glVertex3f(1.0f, -0.5f, -5.0f);
	glVertex3f(0.9f, -0.3f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.7f, -0.1f, -5.0f);
	glVertex3f(0.9f, -0.3f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.7f, -0.1f, -5.0f);
	glVertex3f(0.5f, -0.3f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.4f, -0.5f, -5.0f);
	glVertex3f(0.5f, -0.3f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.4f, -0.5f, -5.0f);
	glVertex3f(0.4f, -0.7f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.5f, -0.9f, -5.0f);
	glVertex3f(0.4f, -0.7f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.5f, -0.9f, -5.0f);
	glVertex3f(0.7f, -1.1f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(0.9, -0.9f, -5.0f);
	glVertex3f(0.7f, -1.1f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(1.0f, -0.7f, -5.0f);
	glVertex3f(0.9f, -0.9f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glVertex3f(1.0f, -0.7f, -5.0f);
	glVertex3f(1.0f, -0.5f, -5.0f);
	glVertex3f(0.7f, -0.5f, -5.0f);

	glEnd(); //End triangle coordinates

	glutSwapBuffers(); //Send the 3D scene to the screen
}

int main(int argc, char** argv) {
	//Initialize GLUT
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
	glutInitWindowSize(400, 400); //Set the window size
    //Create the window
	glutCreateWindow("Basic Shapes - videotutorialsrock.com");
	initRendering(); //Initialize rendering

	glutDisplayFunc(drawScene);
	glutKeyboardFunc(handleKeypress);
	glutReshapeFunc(handleResize);

	glutMainLoop(); 
	return 0; 
}
//Pentagon , Hexagon , Heptagon , Octagon , Nonagon ,  Decagon 
